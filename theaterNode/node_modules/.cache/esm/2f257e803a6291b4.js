let Sequelize,Model,sequelize,Models;_3a6‍.x([["default",()=>_3a6‍.o]]);_3a6‍.w("sequelize",[["default",["Sequelize"],function(v){Sequelize=v}],["Model",["Model"],function(v){Model=v}]]);_3a6‍.w("../helpers/sequelize",[["default",["sequelize"],function(v){sequelize=v}]]);_3a6‍.w("./Models",[["default",["Models"],function(v){Models=v}]]);



class Films extends _3a6‍.a("Model",Model) {}

Films.init({
    id: {
        type: _3a6‍.a("Sequelize",Sequelize).BIGINT.UNSIGNED,
        primaryKey: true,
        allowNull: false,
        autoIncrement: true,
    },

    name: {
        type: _3a6‍.a("Sequelize",Sequelize).STRING,
        allowNull: false,
        validate: {
            isAlpha: {
                msg: "Invalid First Name"
            }
        }
    },

    time: {
        type: _3a6‍.a("Sequelize",Sequelize).DATE,
        allowNull: true,
    },

}, {
    sequelize:_3a6‍.a("sequelize",sequelize),
    modelName: 'films',
    timestamps: false,
});

Films.belongsTo(_3a6‍.a("Models",Models).Theater, {
    foreignKey: 'theaterId',
    onDelete: 'cascade',
    onUpdate: 'cascade'
});

Films.sync();

_3a6‍.d(Films);_3a6‍.j(["default"]);
